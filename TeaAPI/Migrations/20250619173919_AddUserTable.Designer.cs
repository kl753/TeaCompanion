// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TeaAPI.Data;

#nullable disable

namespace TeaAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619173919_AddUserTable")]
    partial class AddUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TeaAPI.Models.Tea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("RecSteepTime")
                        .HasColumnType("integer");

                    b.Property<int?>("RecTemp")
                        .HasColumnType("integer");

                    b.Property<string>("Subtype")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Teas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryOfOrigin = "Japan",
                            CreatedAt = new DateTime(2025, 6, 19, 17, 39, 18, 117, DateTimeKind.Utc).AddTicks(1244),
                            Description = "A finely ground powder of specially grown and processed green tea leaves.",
                            Name = "Green Tea",
                            RecSteepTime = 180,
                            RecTemp = 95,
                            Subtype = "Matcha",
                            Type = "Green",
                            UpdatedAt = new DateTime(2025, 6, 19, 17, 39, 18, 117, DateTimeKind.Utc).AddTicks(1433)
                        },
                        new
                        {
                            Id = 2,
                            CountryOfOrigin = "India",
                            CreatedAt = new DateTime(2025, 6, 19, 17, 39, 18, 117, DateTimeKind.Utc).AddTicks(1622),
                            Description = "A strong, malty black tea from the Assam region.",
                            Name = "Black Tea",
                            RecSteepTime = 240,
                            RecTemp = 100,
                            Subtype = "Assam",
                            Type = "Black",
                            UpdatedAt = new DateTime(2025, 6, 19, 17, 39, 18, 117, DateTimeKind.Utc).AddTicks(1623)
                        });
                });

            modelBuilder.Entity("TeaAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 19, 17, 39, 18, 313, DateTimeKind.Utc).AddTicks(5162),
                            Email = "test@example.com",
                            PasswordHash = "$2b$10$Hhmif.7fxXNF2iKIL2/joegNw01A6a8goB5HPpBF8yWVmO/EpDM4G",
                            UpdatedAt = new DateTime(2025, 6, 19, 17, 39, 18, 313, DateTimeKind.Utc).AddTicks(5574),
                            Username = "test_tea_lover"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
